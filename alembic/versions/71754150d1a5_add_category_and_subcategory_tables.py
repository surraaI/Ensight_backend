"""Add Category and Subcategory tables

Revision ID: 71754150d1a5
Revises: 56594863bf22
Create Date: 2025-05-14 06:32:40.255160

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '71754150d1a5'
down_revision: Union[str, None] = '56594863bf22'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('subcategories',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('category_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.add_column('aggregated_news', sa.Column('slug', sa.String(), nullable=True))
    op.add_column('aggregated_news', sa.Column('meta_description', sa.String(), nullable=True))
    op.add_column('aggregated_news', sa.Column('is_featured', sa.Boolean(), nullable=True))
    op.add_column('aggregated_news', sa.Column('is_deleted', sa.Boolean(), nullable=True))
    op.add_column('aggregated_news', sa.Column('views', sa.Integer(), nullable=True))
    op.add_column('aggregated_news', sa.Column('shares', sa.Integer(), nullable=True))
    op.add_column('aggregated_news', sa.Column('category_id', sa.String(), nullable=True))
    op.add_column('aggregated_news', sa.Column('subcategory_id', sa.String(), nullable=True))
    op.add_column('aggregated_news', sa.Column('published_at', sa.DateTime(), nullable=True))
    op.alter_column('aggregated_news', 'status',
               existing_type=postgresql.ENUM('draft', 'published', name='agg_news_status'),
               nullable=False)
    op.create_index(op.f('ix_aggregated_news_slug'), 'aggregated_news', ['slug'], unique=True)
    op.create_foreign_key(None, 'aggregated_news', 'subcategories', ['subcategory_id'], ['id'])
    op.create_foreign_key(None, 'aggregated_news', 'categories', ['category_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'aggregated_news', type_='foreignkey')
    op.drop_constraint(None, 'aggregated_news', type_='foreignkey')
    op.drop_index(op.f('ix_aggregated_news_slug'), table_name='aggregated_news')
    op.alter_column('aggregated_news', 'status',
               existing_type=postgresql.ENUM('draft', 'published', name='agg_news_status'),
               nullable=True)
    op.drop_column('aggregated_news', 'published_at')
    op.drop_column('aggregated_news', 'subcategory_id')
    op.drop_column('aggregated_news', 'category_id')
    op.drop_column('aggregated_news', 'shares')
    op.drop_column('aggregated_news', 'views')
    op.drop_column('aggregated_news', 'is_deleted')
    op.drop_column('aggregated_news', 'is_featured')
    op.drop_column('aggregated_news', 'meta_description')
    op.drop_column('aggregated_news', 'slug')
    op.drop_table('subcategories')
    op.drop_table('categories')
    # ### end Alembic commands ###
