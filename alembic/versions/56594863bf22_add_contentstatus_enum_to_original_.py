"""Add ContentStatus enum to original_content

Revision ID: 56594863bf22
Revises: 1202cecc8804
Create Date: 2025-05-14 05:38:10.681406

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '56594863bf22'
down_revision: Union[str, None] = '1202cecc8804'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Create enums before altering any columns
    op.execute("CREATE TYPE original_content_status AS ENUM ('DRAFT', 'PUBLISHED')")
    op.execute("CREATE TYPE role AS ENUM ('ADMIN', 'EDITOR', 'WRITER', 'SUBSCRIBER', 'FREE_USER')")

    # Now do your ALTERs using those enums
    op.alter_column('original_content', 'status',
        existing_type=postgresql.ENUM('draft', 'review', 'published', name='content_status'),
        type_=sa.Enum('DRAFT', 'PUBLISHED', name='original_content_status'),
        existing_nullable=True,
        postgresql_using="status::text::original_content_status"
    )

    op.alter_column('users', 'role',
        existing_type=postgresql.ENUM('ADMIN', 'EDITOR', 'WRITER', 'SUBSCRIBER', 'FREE_USER', name='userrole'),
        type_=sa.Enum('ADMIN', 'EDITOR', 'WRITER', 'SUBSCRIBER', 'FREE_USER', name='role'),
        existing_nullable=True,
        postgresql_using="role::text::role"
    )

    # (leave all other operations as they are)
    op.add_column('original_content', sa.Column('image_url', sa.String(), nullable=True))
    op.add_column('original_content', sa.Column('written_by_id', sa.String(), nullable=True))
    op.add_column('original_content', sa.Column('edited_by_id', sa.String(), nullable=True))
    op.add_column('original_content', sa.Column('approved_by_id', sa.String(), nullable=True))
    op.add_column('original_content', sa.Column('published_at', sa.DateTime(), nullable=True))
    op.drop_constraint('original_content_approved_by_fkey', 'original_content', type_='foreignkey')
    op.drop_constraint('original_content_written_by_fkey', 'original_content', type_='foreignkey')
    op.drop_constraint('original_content_edited_by_fkey', 'original_content', type_='foreignkey')
    op.create_foreign_key(None, 'original_content', 'users', ['written_by_id'], ['id'])
    op.create_foreign_key(None, 'original_content', 'users', ['edited_by_id'], ['id'])
    op.create_foreign_key(None, 'original_content', 'users', ['approved_by_id'], ['id'])
    op.drop_column('original_content', 'approved_by')
    op.drop_column('original_content', 'thumbnail_url')
    op.drop_column('original_content', 'written_by')
    op.drop_column('original_content', 'edited_by')
    op.alter_column('users', 'role',
        existing_type=postgresql.ENUM('ADMIN', 'EDITOR', 'WRITER', 'SUBSCRIBER', 'FREE_USER', name='userrole'),
        type_=sa.Enum('ADMIN', 'EDITOR', 'WRITER', 'SUBSCRIBER', 'FREE_USER', name='role'),
        existing_nullable=True)



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'role',
               existing_type=sa.Enum('ADMIN', 'EDITOR', 'WRITER', 'SUBSCRIBER', 'FREE_USER', name='role'),
               type_=postgresql.ENUM('ADMIN', 'EDITOR', 'WRITER', 'SUBSCRIBER', 'FREE_USER', name='userrole'),
               existing_nullable=True)
    op.add_column('original_content', sa.Column('edited_by', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('original_content', sa.Column('written_by', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('original_content', sa.Column('thumbnail_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('original_content', sa.Column('approved_by', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'original_content', type_='foreignkey')
    op.drop_constraint(None, 'original_content', type_='foreignkey')
    op.drop_constraint(None, 'original_content', type_='foreignkey')
    op.create_foreign_key('original_content_edited_by_fkey', 'original_content', 'users', ['edited_by'], ['id'])
    op.create_foreign_key('original_content_written_by_fkey', 'original_content', 'users', ['written_by'], ['id'])
    op.create_foreign_key('original_content_approved_by_fkey', 'original_content', 'users', ['approved_by'], ['id'])
    op.alter_column('original_content', 'status',
               existing_type=sa.Enum('DRAFT', 'PUBLISHED', name='original_content_status'),
               type_=postgresql.ENUM('draft', 'review', 'published', name='content_status'),
               existing_nullable=True)
    op.drop_column('original_content', 'published_at')
    op.drop_column('original_content', 'approved_by_id')
    op.drop_column('original_content', 'edited_by_id')
    op.drop_column('original_content', 'written_by_id')
    op.drop_column('original_content', 'image_url')
    op.alter_column('aggregated_news', 'status',
               existing_type=postgresql.ENUM('draft', 'published', name='agg_news_status'),
               nullable=True)
    op.execute("DROP TYPE role")
    op.execute("DROP TYPE original_content_status")

    # ### end Alembic commands ###
